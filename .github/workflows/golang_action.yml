name: Golang Reusable Workflow

on:
    workflow_call:
        inputs:
            environment:
                required: true
                type: string
            preview-only:
                default: false
                required: false
                type: boolean
            pulumi-stack:
                required: true
                type: string
            compile-path:
                required: true
                type: string
            app-name:
                required: true
                type: string
            architecture:
                required: false
                default: amd64
                type: string
            version-root:
                required: true
                type: string
            goprivate:
                required: true
                type: string
            go-version:
                required: true
                type: string
            sentry-release:
                required: false
                default: false
                type: boolean
            sentry-org:
                required: false
                type: string
            sentry-project:
                required: false
                type: string
        secrets:
            GIT_BUILDBOT_TOKEN:
                required: true
            PULUMI_ACCESS_TOKEN:
                required: true
            SENTRY_AUTH_TOKEN:
                required: false
jobs:
    preview:
        name: preview
        runs-on: ubuntu-latest
        env:
            CurrentDate: $(date +'%Y-%m-%dT%H:%M:%S')
            GOPRIVATE: ${{ inputs.goprivate }}
            GIT_BUILDBOT_TOKEN: ${{ secrets.GIT_BUILDBOT_TOKEN }}
            PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        steps:
            - name: Echo some fields
              run: |
                  echo repository=${{ github.repository }}
                  echo GIT_BUILDBOT_TOKEN=$GIT_BUILDBOT_TOKEN
                  echo PULUMI_ACCESS_TOKEN=$PULUMI_ACCESS_TOKEN
                  echo architecture=${{ inputs.architecture }}

            - uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  cache-dependency-path: '**/go.sum'
                  go-version: ${{ inputs.go-version }}

            - name: Grant access to private repo
              run: git config --global url.https://$GIT_BUILDBOT_TOKEN@github.com/.insteadOf https://github.com/

            - name: Build
              uses: codeshare22/customactions/gobuild@main
              with:
                  compile-path: ${{ inputs.compile-path }}
                  output-path: ../dist
                  version-root: ${{ inputs.version-root }}
                  architecture: ${{ inputs.architecture }}

            - name: Prepare Docker
              run: |
                  mkdir -p output/
                  cp dist/${{ inputs.architecture }}/* output/
                  cp ${{ inputs.compile-path }}/docker/config*.yml output/
                  cp ${{ inputs.compile-path }}/docker/extra/* output/ 2>/dev/null || :

            # - name: Print working directory
            #   run: |
            #        pwd

            - name: Get AWS Keys
              uses: codeshare22/customactions/getawskeys@main
              with:
                  stack-name: ${{ inputs.pulumi-stack }}
                  install-pulumi: true

            - uses: pulumi/actions@v6
              with:
                  command: preview
                  work-dir: ./infra/
                  stack-name: ${{ inputs.pulumi-stack }}

            # - name: Print working directory
            #   run: |
            #        pwd
            #        ls -l .
            #        ls -lR output/

            - name: Tar files
              run: tar -cvf output.tar output/

            - name: Upload result of this "${{ inputs.environment }} / preview" job
              uses: actions/upload-artifact@v4
              with:
                  name: output-${{ inputs.environment }}
                  path: output.tar

    deploy:
        name: deploy
        if: ${{ inputs.preview-only == false }}
        needs: preview
        runs-on: ubuntu-latest
        concurrency:
            group: ${{ inputs.app-name }}-${{ inputs.environment }}
            cancel-in-progress: true
        environment: ${{ inputs.environment }}
        env:
            CurrentDate: $(date +'%Y-%m-%dT%H:%M:%S')
            GOPRIVATE: ${{ inputs.goprivate }}
            GIT_BUILDBOT_TOKEN: ${{ secrets.GIT_BUILDBOT_TOKEN }}
            PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        steps:
            - uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Create output directory
              run: |
                  mkdir -p output/

            - name: Download result of previous "${{ inputs.environment }} / preview" job
              uses: actions/download-artifact@v4
              with:
                  name: output-${{ inputs.environment }}

            - name: Untar files
              run: tar -xvf output.tar

            - name: Get AWS Keys
              uses: codeshare22/customactions/getawskeys@main
              with:
                  stack-name: ${{ inputs.pulumi-stack }}
                  install-pulumi: true

            - name: Grant access to private repo
              run: git config --global url.https://$GIT_BUILDBOT_TOKEN@github.com/.insteadOf https://github.com/

            # Set up QEMU for ARM64 emulation
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
              if: inputs.architecture == 'arm64'
              with:
                platforms: arm64  # Specify ARM64 as the target platform
                
            # Set up Docker Buildx for multi-architecture builds
            - name: Set up Docker Buildx
              if: inputs.architecture == 'arm64'
              uses: docker/setup-buildx-action@v3

            - uses: pulumi/actions@v6
              with:
                  command: up
                  work-dir: ./infra/
                  stack-name: ${{ inputs.pulumi-stack }}

            - name: Create Sentry release
              uses: getsentry/action-release@v1
              if: inputs.sentry-release == true
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  SENTRY_ORG: ${{ inputs.sentry-org }}
                  SENTRY_PROJECT: ${{ inputs.sentry-project }}
              with:
                  environment: ${{ inputs.environment }}
